server {
    listen 192.168.1.10:80; ## internet facing IP, maybe nated from your router
    root /var/data/websites/letsencrypt;
    index index.php index.html index.htm;
    server_name auth.mydomain.com;
    location = /.well-known/acme-challenge/ {
        try_files $uri /dev/null =404;
    }
    return 301 https://$host$request_uri;
}

server {
  listen 192.168.1.10:443 ssl http2; ## internet facing IP, maybe nated from your router
  server_name     auth.mydomain.com;

  #SSL setting
  include /etc/nginx/conf.d/tls_cert.conf;
  add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";
  add_header X-Frame-Options "SAMEORIGIN";
  access_log /var/log/nginx/auth-access.log main;

  # Serve the backend API for the portal.
  location /api {
    proxy_set_header  X-Real-IP $remote_addr;

    # Required by Authelia because "trust proxy" option is used.
    # See https://expressjs.com/en/guide/behind-proxies.html
    proxy_set_header  X-Forwarded-Proto $scheme;

    # Required by Authelia to build correct links for identity validation.
    proxy_set_header  X-Forwarded-Host $http_host;

    # Needed for network ACLs to work. It appends the IP of the client to the list of IPs
    # and allows Authelia to use it to match the network-based ACLs.
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_intercept_errors on;

    proxy_set_header Host "auth.mydomain.com";
    proxy_pass        http://pi-swarm-authelia;
  }

  # Serves the portal application.
  location / {
    # Allow websockets for webpack to auto-reload.
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host "auth.mydomain.com";

    proxy_pass        http://pi-swarm-authelia;
  }
}
